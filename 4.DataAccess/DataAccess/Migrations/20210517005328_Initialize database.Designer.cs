// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MicroShopsContext))]
    [Migration("20210517005328_Initialize database")]
    partial class Initializedatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Account.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", "account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Super Administrador",
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Administrador de tienda y cliente",
                            Name = "store"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cliente",
                            Name = "customer"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Account.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", "account");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2301d97c-cc4e-48b5-8b9a-a191bd3a7f88"),
                            Email = "jdvanegas4@gmail.com",
                            LastName = "Vanegas Rodriguez",
                            Name = "Juan David",
                            Password = "KB+JFudzjaeG9KQsmz3d1+9paVa1s83diUM2FtchFNM=",
                            Phone = "3196780859",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Account.User", b =>
                {
                    b.HasOne("Domain.Entities.Account.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
